package test

internal final class A {
    public constructor A()
    
    internal class object <class-object-for-A> {
        private constructor <class-object-for-A>()
    }
    
    internal final enum class E : jet.Enum<test.A.E> {
        private constructor E()
        public final override /*1*/ /*fake_override*/ fun name(): jet.String
        public final override /*1*/ /*fake_override*/ fun ordinal(): jet.Int
        
        public class object <class-object-for-E> {
            private constructor <class-object-for-E>()
            public final /*synthesized*/ fun valueOf(/*0*/ value: jet.String): test.A.E
            public final /*synthesized*/ fun values(): jet.Array<test.A.E>
        }
        
        public enum entry ENTRY : test.A.E {
            private constructor ENTRY()
            public final override /*1*/ /*fake_override*/ fun name(): jet.String
            public final override /*1*/ /*fake_override*/ fun ordinal(): jet.Int
            
            public class object <class-object-for-ENTRY> : test.A.E.ENTRY {
                private constructor <class-object-for-ENTRY>()
                public final override /*1*/ /*fake_override*/ fun name(): jet.String
                public final override /*1*/ /*fake_override*/ fun ordinal(): jet.Int
            }
        }
    }
}
